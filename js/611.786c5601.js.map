{"version":3,"file":"js/611.786c5601.js","mappings":"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","sources":["webpack://joywork/./node_modules/primevue/selectbutton/selectbutton.esm.js","webpack://joywork/./node_modules/rbush/rbush.min.js","webpack://joywork/./node_modules/ol/Collection.js","webpack://joywork/./node_modules/ol/CollectionEventType.js","webpack://joywork/./node_modules/ol/Disposable.js","webpack://joywork/./node_modules/ol/Feature.js","webpack://joywork/./node_modules/ol/Image.js","webpack://joywork/./node_modules/ol/ImageState.js","webpack://joywork/./node_modules/ol/renderer/Map.js","webpack://joywork/./node_modules/ol/renderer/Composite.js","webpack://joywork/./node_modules/ol/layer/Group.js","webpack://joywork/./node_modules/ol/MapBrowserEventHandler.js","webpack://joywork/./node_modules/ol/MapProperty.js","webpack://joywork/./node_modules/ol/structs/PriorityQueue.js","webpack://joywork/./node_modules/ol/TileState.js","webpack://joywork/./node_modules/ol/TileQueue.js","webpack://joywork/./node_modules/ol/Map.js","webpack://joywork/./node_modules/ol/MapBrowserEvent.js","webpack://joywork/./node_modules/ol/MapBrowserEventType.js","webpack://joywork/./node_modules/ol/MapEvent.js","webpack://joywork/./node_modules/ol/MapEventType.js","webpack://joywork/./node_modules/ol/Object.js","webpack://joywork/./node_modules/ol/ObjectEventType.js","webpack://joywork/./node_modules/ol/Observable.js","webpack://joywork/./node_modules/ol/Overlay.js","webpack://joywork/./node_modules/ol/ViewProperty.js","webpack://joywork/./node_modules/ol/tilegrid/common.js","webpack://joywork/./node_modules/ol/centerconstraint.js","webpack://joywork/./node_modules/ol/resolutionconstraint.js","webpack://joywork/./node_modules/ol/View.js","webpack://joywork/./node_modules/ol/ViewHint.js","webpack://joywork/./node_modules/ol/array.js","webpack://joywork/./node_modules/ol/asserts.js","webpack://joywork/./node_modules/ol/color.js","webpack://joywork/./node_modules/ol/colorlike.js","webpack://joywork/./node_modules/ol/console.js","webpack://joywork/./node_modules/ol/control/Control.js","webpack://joywork/./node_modules/ol/control/Zoom.js","webpack://joywork/./node_modules/ol/control/ZoomSlider.js","webpack://joywork/./node_modules/ol/control/Attribution.js","webpack://joywork/./node_modules/ol/control/Rotate.js","webpack://joywork/./node_modules/ol/control/defaults.js","webpack://joywork/./node_modules/ol/coordinate.js","webpack://joywork/./node_modules/ol/css.js","webpack://joywork/./node_modules/ol/dom.js","webpack://joywork/./node_modules/ol/easing.js","webpack://joywork/./node_modules/ol/events.js","webpack://joywork/./node_modules/ol/events/Event.js","webpack://joywork/./node_modules/ol/events/EventType.js","webpack://joywork/./node_modules/ol/events/Target.js","webpack://joywork/./node_modules/ol/events/condition.js","webpack://joywork/./node_modules/ol/extent.js","webpack://joywork/./node_modules/ol/extent/Relationship.js","webpack://joywork/./node_modules/ol/functions.js","webpack://joywork/./node_modules/ol/geom/Geometry.js","webpack://joywork/./node_modules/ol/geom/Point.js","webpack://joywork/./node_modules/ol/geom/LinearRing.js","webpack://joywork/./node_modules/ol/geom/Polygon.js","webpack://joywork/./node_modules/ol/geom/SimpleGeometry.js","webpack://joywork/./node_modules/ol/geom/flat/area.js","webpack://joywork/./node_modules/ol/geom/flat/closest.js","webpack://joywork/./node_modules/ol/geom/flat/contains.js","webpack://joywork/./node_modules/ol/geom/flat/deflate.js","webpack://joywork/./node_modules/ol/geom/flat/inflate.js","webpack://joywork/./node_modules/ol/geom/flat/interiorpoint.js","webpack://joywork/./node_modules/ol/geom/flat/intersectsextent.js","webpack://joywork/./node_modules/ol/geom/flat/length.js","webpack://joywork/./node_modules/ol/geom/flat/reverse.js","webpack://joywork/./node_modules/ol/geom/flat/orient.js","webpack://joywork/./node_modules/ol/geom/flat/segments.js","webpack://joywork/./node_modules/ol/geom/flat/simplify.js","webpack://joywork/./node_modules/ol/geom/flat/transform.js","webpack://joywork/./node_modules/ol/has.js","webpack://joywork/./node_modules/ol/geom/Circle.js","webpack://joywork/./node_modules/ol/geom/GeometryCollection.js","webpack://joywork/./node_modules/ol/geom/flat/interpolate.js","webpack://joywork/./node_modules/ol/geom/LineString.js","webpack://joywork/./node_modules/ol/geom/MultiLineString.js","webpack://joywork/./node_modules/ol/geom/MultiPoint.js","webpack://joywork/./node_modules/ol/geom/flat/center.js","webpack://joywork/./node_modules/ol/geom/MultiPolygon.js","webpack://joywork/./node_modules/ol/interaction/Draw.js","webpack://joywork/./node_modules/ol/interaction/Interaction.js","webpack://joywork/./node_modules/ol/interaction/Modify.js","webpack://joywork/./node_modules/ol/interaction/Pointer.js","webpack://joywork/./node_modules/ol/interaction/Property.js","webpack://joywork/./node_modules/ol/interaction/Select.js","webpack://joywork/./node_modules/ol/events/SnapEvent.js","webpack://joywork/./node_modules/ol/interaction/Snap.js","webpack://joywork/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://joywork/./node_modules/ol/interaction/DragPan.js","webpack://joywork/./node_modules/ol/interaction/DragRotate.js","webpack://joywork/./node_modules/ol/render/Box.js","webpack://joywork/./node_modules/ol/interaction/DragBox.js","webpack://joywork/./node_modules/ol/interaction/DragZoom.js","webpack://joywork/./node_modules/ol/events/Key.js","webpack://joywork/./node_modules/ol/interaction/KeyboardPan.js","webpack://joywork/./node_modules/ol/interaction/KeyboardZoom.js","webpack://joywork/./node_modules/ol/Kinetic.js","webpack://joywork/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://joywork/./node_modules/ol/interaction/PinchRotate.js","webpack://joywork/./node_modules/ol/interaction/PinchZoom.js","webpack://joywork/./node_modules/ol/interaction/defaults.js","webpack://joywork/./node_modules/ol/layer/Base.js","webpack://joywork/./node_modules/ol/layer/BaseImage.js","webpack://joywork/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://joywork/./node_modules/ol/layer/Image.js","webpack://joywork/./node_modules/ol/layer/Layer.js","webpack://joywork/./node_modules/ol/layer/Property.js","webpack://joywork/./node_modules/ol/style/IconImage.js","webpack://joywork/./node_modules/ol/style/Icon.js","webpack://joywork/./node_modules/ol/style/Text.js","webpack://joywork/./node_modules/ol/expr/expression.js","webpack://joywork/./node_modules/ol/expr/cpu.js","webpack://joywork/./node_modules/ol/render/canvas/style.js","webpack://joywork/./node_modules/ol/layer/BaseVector.js","webpack://joywork/./node_modules/ol/render/canvas/Instruction.js","webpack://joywork/./node_modules/ol/render/VectorContext.js","webpack://joywork/./node_modules/ol/render/canvas/Builder.js","webpack://joywork/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://joywork/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://joywork/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://joywork/./node_modules/ol/geom/flat/linechunk.js","webpack://joywork/./node_modules/ol/geom/flat/straightchunk.js","webpack://joywork/./node_modules/ol/render/canvas/TextBuilder.js","webpack://joywork/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://joywork/./node_modules/ol/geom/flat/textpath.js","webpack://joywork/./node_modules/ol/render/canvas/Executor.js","webpack://joywork/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://joywork/./node_modules/ol/render/canvas/Immediate.js","webpack://joywork/./node_modules/ol/render/canvas/hitdetect.js","webpack://joywork/./node_modules/ol/renderer/vector.js","webpack://joywork/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://joywork/./node_modules/ol/layer/Vector.js","webpack://joywork/./node_modules/ol/math.js","webpack://joywork/./node_modules/ol/obj.js","webpack://joywork/./node_modules/ol/pointer/EventType.js","webpack://joywork/./node_modules/ol/proj/epsg3857.js","webpack://joywork/./node_modules/ol/proj/epsg4326.js","webpack://joywork/./node_modules/ol/proj/projections.js","webpack://joywork/./node_modules/ol/proj/transforms.js","webpack://joywork/./node_modules/ol/sphere.js","webpack://joywork/./node_modules/ol/proj.js","webpack://joywork/./node_modules/ol/proj/Projection.js","webpack://joywork/./node_modules/ol/proj/Units.js","webpack://joywork/./node_modules/ol/render/Event.js","webpack://joywork/./node_modules/ol/render/EventType.js","webpack://joywork/./node_modules/ol/render/canvas.js","webpack://joywork/./node_modules/ol/renderer/Layer.js","webpack://joywork/./node_modules/ol/renderer/canvas/Layer.js","webpack://joywork/./node_modules/ol/rotationconstraint.js","webpack://joywork/./node_modules/ol/size.js","webpack://joywork/./node_modules/ol/reproj/common.js","webpack://joywork/./node_modules/ol/reproj/Triangulation.js","webpack://joywork/./node_modules/ol/reproj.js","webpack://joywork/./node_modules/ol/resolution.js","webpack://joywork/./node_modules/ol/reproj/Image.js","webpack://joywork/./node_modules/ol/source/common.js","webpack://joywork/./node_modules/ol/source/Image.js","webpack://joywork/./node_modules/ol/source/static.js","webpack://joywork/./node_modules/ol/source/ImageStatic.js","webpack://joywork/./node_modules/ol/source/Source.js","webpack://joywork/./node_modules/ol/loadingstrategy.js","webpack://joywork/./node_modules/ol/featureloader.js","webpack://joywork/./node_modules/ol/source/Vector.js","webpack://joywork/./node_modules/ol/source/VectorEventType.js","webpack://joywork/./node_modules/ol/structs/RBush.js","webpack://joywork/./node_modules/ol/style/Circle.js","webpack://joywork/./node_modules/ol/style/Fill.js","webpack://joywork/./node_modules/ol/style/IconImageCache.js","webpack://joywork/./node_modules/ol/style/Image.js","webpack://joywork/./node_modules/ol/style/RegularShape.js","webpack://joywork/./node_modules/ol/style/Stroke.js","webpack://joywork/./node_modules/ol/style/Style.js","webpack://joywork/./node_modules/ol/transform.js","webpack://joywork/./node_modules/ol/util.js"],"sourcesContent":["import Ripple from 'primevue/ripple';\nimport { DomHandler, ObjectUtils } from 'primevue/utils';\nimport BaseComponent from 'primevue/basecomponent';\nimport { resolveDirective, openBlock, createElementBlock, mergeProps, Fragment, renderList, withDirectives, renderSlot, normalizeClass, createElementVNode, toDisplayString } from 'vue';\n\nvar classes = {\n  root: function root(_ref) {\n    var props = _ref.props;\n    return ['p-selectbutton p-buttonset p-component', {\n      'p-disabled': props.disabled\n    }];\n  },\n  button: function button(_ref2) {\n    var instance = _ref2.instance,\n      option = _ref2.option;\n    return ['p-button p-component', {\n      'p-highlight': instance.isSelected(option),\n      'p-disabled': instance.isOptionDisabled(option)\n    }];\n  },\n  label: 'p-button-label'\n};\nvar script$1 = {\n  name: 'BaseSelectButton',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: null,\n    options: Array,\n    optionLabel: null,\n    optionValue: null,\n    optionDisabled: null,\n    multiple: Boolean,\n    unselectable: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: Boolean,\n    dataKey: null,\n    'aria-labelledby': {\n      type: String,\n      \"default\": null\n    }\n  },\n  css: {\n    classes: classes\n  },\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar script = {\n  name: 'SelectButton',\n  \"extends\": script$1,\n  emits: ['update:modelValue', 'focus', 'blur', 'change'],\n  data: function data() {\n    return {\n      focusedIndex: 0\n    };\n  },\n  mounted: function mounted() {\n    this.defaultTabIndexes();\n  },\n  methods: {\n    defaultTabIndexes: function defaultTabIndexes() {\n      var opts = DomHandler.find(this.$refs.container, '[data-pc-section=\"button\"]');\n      var firstHighlight = DomHandler.findSingle(this.$refs.container, '[data-p-highlight=\"true\"]');\n      for (var i = 0; i < opts.length; i++) {\n        if (DomHandler.getAttribute(opts[i], 'data-p-highlight') === true && ObjectUtils.equals(opts[i], firstHighlight) || firstHighlight === null && i == 0) {\n          this.focusedIndex = i;\n        }\n      }\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n    },\n    getOptionValue: function getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n    },\n    getOptionRenderKey: function getOptionRenderKey(option) {\n      return this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option);\n    },\n    getPTOptions: function getPTOptions(option, key) {\n      return this.ptm(key, {\n        context: {\n          active: this.isSelected(option),\n          disabled: this.isOptionDisabled(option),\n          option: option\n        }\n      });\n    },\n    isOptionDisabled: function isOptionDisabled(option) {\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n    },\n    onOptionSelect: function onOptionSelect(event, option, index) {\n      var _this = this;\n      if (this.disabled || this.isOptionDisabled(option)) {\n        return;\n      }\n      var selected = this.isSelected(option);\n      if (selected && this.unselectable) {\n        return;\n      }\n      var optionValue = this.getOptionValue(option);\n      var newValue;\n      if (this.multiple) {\n        if (selected) newValue = this.modelValue.filter(function (val) {\n          return !ObjectUtils.equals(val, optionValue, _this.equalityKey);\n        });else newValue = this.modelValue ? [].concat(_toConsumableArray(this.modelValue), [optionValue]) : [optionValue];\n      } else {\n        newValue = selected ? null : optionValue;\n      }\n      this.focusedIndex = index;\n      this.$emit('update:modelValue', newValue);\n      this.$emit('change', {\n        event: event,\n        value: newValue\n      });\n    },\n    isSelected: function isSelected(option) {\n      var selected = false;\n      var optionValue = this.getOptionValue(option);\n      if (this.multiple) {\n        if (this.modelValue) {\n          var _iterator = _createForOfIteratorHelper(this.modelValue),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var val = _step.value;\n              if (ObjectUtils.equals(val, optionValue, this.equalityKey)) {\n                selected = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      } else {\n        selected = ObjectUtils.equals(this.modelValue, optionValue, this.equalityKey);\n      }\n      return selected;\n    },\n    onKeydown: function onKeydown(event, option, index) {\n      switch (event.code) {\n        case 'Space':\n          {\n            this.onOptionSelect(event, option, index);\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowDown':\n        case 'ArrowRight':\n          {\n            this.changeTabIndexes(event, 'next');\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowUp':\n        case 'ArrowLeft':\n          {\n            this.changeTabIndexes(event, 'prev');\n            event.preventDefault();\n            break;\n          }\n      }\n    },\n    changeTabIndexes: function changeTabIndexes(event, direction) {\n      var firstTabableChild, index;\n      for (var i = 0; i <= this.$refs.container.children.length - 1; i++) {\n        if (this.$refs.container.children[i].getAttribute('tabindex') === '0') firstTabableChild = {\n          elem: this.$refs.container.children[i],\n          index: i\n        };\n      }\n      if (direction === 'prev') {\n        if (firstTabableChild.index === 0) index = this.$refs.container.children.length - 1;else index = firstTabableChild.index - 1;\n      } else {\n        if (firstTabableChild.index === this.$refs.container.children.length - 1) index = 0;else index = firstTabableChild.index + 1;\n      }\n      this.focusedIndex = index;\n      this.$refs.container.children[index].focus();\n    },\n    onFocus: function onFocus(event) {\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event, option) {\n      if (event.target && event.relatedTarget && event.target.parentElement !== event.relatedTarget.parentElement) {\n        this.defaultTabIndexes();\n      }\n      this.$emit('blur', event, option);\n    }\n  },\n  computed: {\n    equalityKey: function equalityKey() {\n      return this.optionValue ? null : this.dataKey;\n    }\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"aria-labelledby\"];\nvar _hoisted_2 = [\"tabindex\", \"aria-label\", \"role\", \"aria-checked\", \"aria-disabled\", \"onClick\", \"onKeydown\", \"onBlur\", \"data-p-highlight\", \"data-p-disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\",\n    \"class\": _ctx.cx('root'),\n    role: \"group\",\n    \"aria-labelledby\": _ctx.ariaLabelledby\n  }, _ctx.ptm('root'), {\n    \"data-pc-name\": \"selectbutton\"\n  }), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.options, function (option, i) {\n    return withDirectives((openBlock(), createElementBlock(\"div\", mergeProps({\n      key: $options.getOptionRenderKey(option),\n      tabindex: i === $data.focusedIndex ? '0' : '-1',\n      \"aria-label\": $options.getOptionLabel(option),\n      role: _ctx.multiple ? 'checkbox' : 'radio',\n      \"aria-checked\": $options.isSelected(option),\n      \"aria-disabled\": _ctx.optionDisabled,\n      \"class\": _ctx.cx('button', {\n        option: option\n      }),\n      onClick: function onClick($event) {\n        return $options.onOptionSelect($event, option, i);\n      },\n      onKeydown: function onKeydown($event) {\n        return $options.onKeydown($event, option, i);\n      },\n      onFocus: _cache[0] || (_cache[0] = function ($event) {\n        return $options.onFocus($event);\n      }),\n      onBlur: function onBlur($event) {\n        return $options.onBlur($event, option);\n      }\n    }, $options.getPTOptions(option, 'button'), {\n      \"data-p-highlight\": $options.isSelected(option),\n      \"data-p-disabled\": $options.isOptionDisabled(option)\n    }), [renderSlot(_ctx.$slots, \"option\", {\n      option: option,\n      index: i,\n      \"class\": normalizeClass(_ctx.cx('label'))\n    }, function () {\n      return [createElementVNode(\"span\", mergeProps({\n        \"class\": _ctx.cx('label')\n      }, $options.getPTOptions(option, 'label')), toDisplayString($options.getOptionLabel(option)), 17)];\n    })], 16, _hoisted_2)), [[_directive_ripple]]);\n  }), 128))], 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (((this.wantedExtent_ &&\n            containsExtent(this.wantedExtent_, requestExtent)) ||\n            containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      })\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n"],"names":["classes","root","_ref","props","disabled","button","_ref2","instance","option","isSelected","isOptionDisabled","label","script$1","name","BaseComponent","modelValue","options","Array","optionLabel","optionValue","optionDisabled","multiple","Boolean","unselectable","type","dataKey","String","css","provide","$parentInstance","this","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","from","test","iter","len","arr2","script","emits","data","focusedIndex","mounted","defaultTabIndexes","methods","opts","DomHandler","find","$refs","container","firstHighlight","findSingle","getAttribute","ObjectUtils","equals","getOptionLabel","resolveFieldData","getOptionValue","getOptionRenderKey","getPTOptions","key","ptm","context","active","onOptionSelect","event","index","_this","selected","newValue","filter","val","equalityKey","concat","$emit","_step","_iterator","onKeydown","code","preventDefault","changeTabIndexes","direction","firstTabableChild","children","elem","focus","onFocus","onBlur","target","relatedTarget","parentElement","computed","directives","ripple","Ripple","_hoisted_1","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_directive_ripple","resolveDirective","openBlock","createElementBlock","mergeProps","ref","cx","role","ariaLabelledby","Fragment","renderList","withDirectives","tabindex","onClick","$event","renderSlot","$slots","normalizeClass","createElementVNode","toDisplayString","t","module","exports","r","a","h","l","Math","log","exp","u","sqrt","m","max","floor","c","min","p","d","x","_maxEntries","_minEntries","ceil","clear","indexOf","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","LENGTH","CollectionEvent","Event","element","super","Collection","BaseObject","array","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","Error","dispatchEvent","CollectionEventType","ADD","removeAt","prev","REMOVE","setAt","set","except","Disposable","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","unlistenByKey","listen","EventType","CHANGE","createStyleFunction","setId","id","removeChangeListener","obj","styles","assert","getZIndex","ImageWrapper","EventTarget","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","ImageState","IDLE","image_","loader","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","toPromise","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","src","Promise","resolve","reject","handleLoad","unlisten","handleError","removeEventListener","addEventListener","decodeFallback","IMAGE_DECODE","decode","CREATE_IMAGE_BITMAP","createImageBitmap","EMPTY","MapRenderer","map","map_","dispatchRenderEvent","frameState","abstract","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","rotation","center","makeInverse","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","bind","order","distanceSq","b","some","hasFeatureAtCoordinate","hasFeature","TRUE","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","canExpireCache","postRenderFunctions","expireIconCache","expire","CompositeMapRenderer","fontChangeListenerKey_","checkedFonts","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","width","zIndex","className","CLASS_UNSELECTABLE","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","RenderEvent","parentNode","removeChild","display","RenderEventType","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","replaceChildren","POSTCOMPOSE","layers","renderDeclutter","GroupEvent","LAYERS","LayerGroup","BaseLayer","baseOptions","assign","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","getIntersection","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","POINTERDOWN","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","CLICK","clearTimeout","DBLCLICK","setTimeout","SINGLECLICK","updateActivePointers_","pointerId","POINTERUP","POINTERCANCEL","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","POINTERDRAG","dragging","originalEvent","cancelable","abs","clientX","clientY","LAYERGROUP","SIZE","TARGET","VIEW","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","controls","defaultControls","interactions","defaultInteractions","onFocusOnly","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","view","View","viewOptions","setView","setMap","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","pixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","left","top","getTarget","getTargetElement","toUserCoordinate","getView","getProjection","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","contains","documentElement","interactionsArray","getActive","cont","handleEvent","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","Date","now","time","animate","RENDERCOMPLETE","MapEvent","MapEventType","LOADEND","LOADSTART","getAnimating","resolveConstraints","CONTEXTMENU","removeNode","unobserve","ShadowRoot","host","setSize","getElementById","KEYPRESS","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","moveStart","equalsExtent","MOVESTART","createOrUpdateEmpty","idle","MOVEEND","POSTRENDER","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","parseInt","setViewportSize","activePointers","pixel_","coordinate_","stopPropagation","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","ObjectEvent","oldValue","Observable","values_","hasOwnProperty","getKeys","keys","getPropertiesInternal","notify","listener","silent","applyProperties","unset","onInternal","onceInternal","unInternal","revision_","getRevision","listenOnce","ol_key","unByKey","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","stopEvent","CLASS_SELECTABLE","autoPan","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","removeChildren","updatePixelPosition","childNodes","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","outerWidth","outerHeight","myMargin","margin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","getCenterInternal","centerPx","newCenterPx","panOptions","animation","animateInternal","duration","easing","box","offsetX","pageXOffset","offsetY","pageYOffset","setVisible","mapSize","updateRenderedPosition","round","y","posX","posY","transform","getOptions","CENTER","RESOLUTION","ROTATION","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","clamp","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getHeight","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","linearFindNearest","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","newPadding","getUpdatedOptions_","newOptions","getZoom","getRotation","var_args","args","arguments","anchor","animationCount","animationCallback","start","series","complete","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","modulo","PI","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","cos","sin","getCenter","getConstraints","getConstrainResolution","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","getType","rotate","userProjection","getUserProjection","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","VOID","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","easeOut","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","METERS_PER_UNIT","degrees","getMetersPerUnit","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","disable","coordinatesEqual","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","candidate","reverseSubArray","begin","end","tmp","extension","arr1","len1","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","MAX_CACHE_SIZE","cache","cacheSize","fromStringInternal_","asArray","g","exec","hasAlpha","substr","startsWith","split","Number","normalize","asColorLike","levels","info","level","Control","target_","mapEvent","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","setAttribute","title","createTextNode","handleClick_","outElement","cssClasses","CLASS_CONTROL","duration_","zoomByDelta_","currentZoom","newZoom","Direction","VERTICAL","HORIZONTAL","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","firstElementChild","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","res","getPositionForResolution_","amount","fn","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","Set","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","add","callResetNorth_","resetNorth","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","closestOnCircle","circle","getRadius","dx","dy","closestOnSegment","segment","x2","y2","along","format","template","fractionDigits","replace","toFixed","coordinate1","coordinate2","angle","scale","squaredDistance","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","clearRect","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","node","lastChild","oldChildren","oldChild","newChild","easeIn","linear","originalListener","eventsKey","BaseEvent","evt","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","LOAD","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","dispatching","pendingRemovals","propagate","pr","getListeners","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","WEBKIT","MAC","never","FALSE","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","boundingExtent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","extent1","extent2","coordinateRelationship","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","wrapAndSliceX","isFinite","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","getter","promiseGetter","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","point","intersectsCoordinate","computeExtent","sx","sy","simplify","intersectsExtent","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getTransform","Point","SimpleGeometry","layout","setCoordinates","squaredDx","getCoordinates","setLayout","deflateCoordinate","LinearRing","maxDelta_","maxDeltaRevision_","setFlatCoordinates","maxSquaredDelta","assignClosestPoint","linearRingArea","inflateCoordinates","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","douglasPeucker","deflateCoordinates","Polygon","ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","linearRingsContainsXY","getOrientedFlatCoordinates","linearRingsArea","right","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","fromCircle","sides","getLayout","arrayLength","makeRegular","radius","startAngle","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","endss","assignClosest","offset1","offset2","lerp","squaredDelta","multiArrayMaxSquaredDelta","maxDelta","isRing","tmpPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingssContainsXY","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateMultiCoordinatesArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","isClockwise","linearRingssAreOriented","reverse","reverseCoordinates","orientLinearRingsArray","ret","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeMultiArray","simplifiedEndss","anchorX","anchorY","k","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","devicePixelRatio","WorkerGlobalScope","self","Image","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","setRadius","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","MultiLineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","sd","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","ring","newTarget","considerBothDirections","newCoordinate","startPx","forwardDistance","reverseDistance","sharedRel","px","py","Draw","PointerInteraction","pointerOptions","stopDown","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","type_","mode_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","geometryFunction","mode","squaredLength","squaredCoordinateDistance","Constructor","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","VectorLayer","VectorSource","useSpatialIndex","getDefaultStyleFunction","updateWhileInteracting","geometryName","condition_","condition","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","InteractionProperty","ACTIVE","updateState_","getOverlay","move","addToDrawing_","getPointerCount","handleDownEvent","startDrawing_","deactivateTrace_","toggleTraceState_","lowerLeft","upperRight","getFeaturesInExtent","addOrRemoveTracedCoordinates_","previouslyForward","currentlyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","updatedTraceTarget","oldTarget","handleUpEvent","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","addFeature","newDrawing","ending","sketchFeatures","overlaySource","addFeatures","createEditingStyle","Interaction","setActive","pan","zoomByDelta","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempExtent","tempSegment","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","Modify","boundHandleFeatureChange_","handleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","updateWhileAnimating","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","getFeatures","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","delta_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","segments","ss","removeFeature_","removeFeatureSegmentData_","removeFeature","rBush","nodesToRemove","nodeToRemove","segmentData","depth","lines","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","circleGeometry","createOrUpdateVertexFeature_","vertexFeature","handled","handlingDownUpSequence","removePoint","handleDragEvent","vertex","dragSegment","coordinateDistance","setGeometryCoordinates_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","getInExtent","componentSegments","compareIndexes","segmentDataMatch","uid","closestVertex","closestOnSegmentData","insertVertex_","update","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","geom","viewExtent","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removed","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","forEachInExtent","pointCoordinates","distanceToCenterSquared","distanceToCircumference","handleMoveEvent","targetPointers","updateTrackedPointers_","handledUp","centroid","SelectEventType","SELECT","SelectEvent","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","restorePreviousStyle_","applySelectedStyle_","lastIndexOf","removeFeatureLayerAssociation_","SnapEventType","SNAP","SnapEvent","getFeatureFromEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","register","feature_uid","segmenter","extents","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","projectedCoordinate","segmentsLength","closestFeature","squaredPixelTolerance","getResult","squaredPixelDistance","tempVertexCoord","segmentStart","segmentEnd","DoubleClickZoom","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","centroidFromPointers","scaleCoordinate","getDistance","getAngle","centerpx","DragRotate","lastAngle_","theta","atan2","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","pixels","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","factor","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","background_","background","LayerProperty","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getOpacity","getVisible","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","BaseImageLayer","CanvasImageLayerRenderer","CanvasLayerRenderer","imageLayer","prepareFrame","viewResolution","imageSource","renderedExtent","loadImage","getData","layerExtent","imageExtent","img","imageMapWidth","col","imageMapHeight","row","getImageData","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","viewCenter","pixelTransform","inversePixelTransform","canvasTransform","toTransformString","useContainer","containerReused","clipped","clipUnrotated","tempTransform","renderedResolution","dw","dh","getInterpolate","imageSmoothingEnabled","preRender","previousAlpha","globalAlpha","drawImage","postRender","restore","ImageLayer","createRenderer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","isVisible","getMapInternal","renderEvent","arrayLayerState","taintedTestContext","IconImage","crossOrigin","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","initializeImage_","isTainted_","willReadFrequently","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getImageState","getHitDetectionImage","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","cacheKey","iconImage","calculateScale","wantedWidth","wantedHeight","Icon","ImageStyle","rotateWithView","displacement","declutterMode","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","origin_","initialOptions_","onload","unlistenImageChange","imageSize","setScale","listenImageChange","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getAnchor","getScaleArray","setAnchor","getColor","getImageSize","getOrigin","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","font","rotateWithView_","scale_","scaleArray_","toSize","text_","text","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","fill_","fill","Fill","maxAngle_","maxAngle","placement_","placement","overflow_","stroke_","stroke","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setRotateWithView","setFill","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","parse","encoded","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","expression","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","op","atan","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","Style","empty","prefix","evaluateColor","colorLikeEvaluator","setColor","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","setDisplacement","pointsName","requireNumber","radius1","radius2","shape","RegularShape","evaluateRadius","requireColorLike","requireNumberArray","requireSizeLike","property","RENDER_ORDER","BaseVectorLayer","renderBuffer","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","createDefaultStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","beg","keep","saveTextStates_","defaultPadding","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","reduce","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","lineTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","drawImageOrLabel","repeatSize","save","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","renderFeatureInternal","renderGeometry","geometryRenderer","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","hasRenderListeners","PRERENDER","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","replayGroupInstructions","getOverlaps","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","object","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","fromEPSG4326","input","output","toEPSG4326","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","getPointResolutionFunc","projUnits","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","transformExtent","destProjection","sourceUnits","userUnits","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","measureFont","measureContext","textHeights","retries","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","pixelContext","createPixelContext","pixelContext_","backgroundColor","layerClassName","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","fromResolutionLike","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","sourceImage","sourcePixelRatio","triangulation_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","sourceListenerKey_","unlistenSource_","reproject_","renderReprojected","DECIMALS","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","ImageSource","Source","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","setResolutions","findNearestResolution","getImageInternal","requestExtent","getRequestExtent","handleImageChange","defaultImageLoadFunction","marginWidth","requestWidth","marginHeight","requestHeight","createLoader","url","resolutionX","resolutionY","Static","imageLoadFunction","url_","imageExtent_","getImageExtent","getUrl","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","setState","attributionLike","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","VectorSourceEvent","loader_","format_","strategy_","strategy","allStrategy","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","sid","removeFromIdIndex_","CHANGEFEATURE","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","removeLoadedExtent","featureChangeKeys","setLoader","setUrl","maxEntries","rbush_","RBush_","items_","items","bbox","forEach_","rbush","CircleStyle","radius_","IconImageCache","cache_","cacheSize_","maxCacheSize_","maxCacheSize","colorString","shared","displacement_","hitDetectionCanvas_","radius2_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","ee","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","white","blue","create","setFromArray","transform1","transform2","compose","det","determinant","transformStringDiv","transformString","uidCounter_","ol_uid"],"sourceRoot":""}